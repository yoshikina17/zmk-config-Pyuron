#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        on {
            bindings = <&kp INT_HENKAN>;
            key-positions = <16 17>;
        };

        off {
            bindings = <&kp INT_MUHENKAN>;
            key-positions = <13 12>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    lt_to_layer_0: lt_to_layer_0 {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_TAP_TO_0";
        bindings = <&mo>, <&to_layer_0>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };
};

/ {
    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp L           &kp U           &kp COMMA         &kp PERIOD       &kp F                   &kp W                 &kp R           &kp Y           &kp P
&mt LEFT_CONTROL E  &mt LEFT_GUI I  &mt LEFT_ALT A  &mt LEFT_SHIFT O  &kp MINUS        &kp K                   &mt LEFT_SHIFT T      &mt LEFT_ALT N  &mt LEFT_GUI S  &mt LEFT_SHIFT H
&mt LEFT_SHIFT Z    &kp X           &kp C           &kp V             &kp SEMICOLON    &lt 4 COLON             &to 6                 &kp G           &kp D           &kp M
&kp J               &kp B           &mkp MB1        &mkp MB2          &lt 2 BACKSPACE  &mt LEFT_CONTROL ENTER  &mt LEFT_CONTROL TAB  &lt 2 SPACE     &kp UNDERSCORE  &kp ESCAPE
            >;
        };

        layer_1 {
            bindings = <
&trans        &kp N7         &kp N8  &kp N9  &kp LS(UNDER)  &trans    &kp LS(LT)    &kp LS(EQUAL)  &kp LS(GT)    &kp COLON
&kp NUMBER_0  &kp N4         &kp N5  &kp N6  &kp DOT        &kp LEFT  &kp LS(PLUS)  &kp MINUS      &kp LS(STAR)  &kp FSLH
&trans        &kp N1         &kp N2  &kp N3  &kp COMMA      &trans    &trans        &kp RIGHT      &kp LS(EXCL)  &kp LS(QMARK)
&kp CARET     &kp LS(PRCNT)  &trans  &trans  &trans         &trans    &trans        &trans         &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&kp AT         &kp LBKT      &kp LS(DQT)  &kp RBKT      &trans     &trans  &trans    &kp UP    &trans     &trans
&kp LS(POUND)  &kp LS(LPAR)  &kp LS(SQT)  &kp LS(RPAR)  &trans     &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&kp LS(POUND)  &kp LS(LPAR)  &kp LS(SQT)  &kp LS(RPAR)  &kp COLON  &trans  &trans    &trans    &trans     &trans
&trans         &trans        &trans       &trans        &trans     &trans  &trans    &trans    &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans   &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans      &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans      &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans      &trans  &trans  &trans  &trans        &bootloader   &trans        &trans        &trans
&trans  &bt BT_CLR  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &to 0     &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };
    };
};
